# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, 2018, Flatpak Team. Licensed under Creative Commons
# Attribution 4.0 International License.
# This file is distributed under the same license as the Flatpak package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
# TingPing <tingping@tingping.se>, 2018. #zanata
msgid ""
msgstr ""
"Project-Id-Version: Flatpak\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-11 18:07-0400\n"
"PO-Revision-Date: 2018-05-20 10:37-0400\n"
"Last-Translator: Copied by Zanata <copied-by-zanata@zanata.org>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1)\n"
"Generated-By: Babel 2.5.1\n"
"X-Generator: Zanata 4.6.2\n"

#: ../../building-basics.rst:2
msgid "Building Concepts and Setup"
msgstr ""

#: ../../building-basics.rst:4
msgid ""
"The :doc:`basic-concepts` and :doc:`first-build` guides have already shown "
"how applications get built as Flatpaks, and have introduced many of the core"
" ideas. This page describes some of these ideas and concepts in more detail."
" In doing so, it provides guidance on picking a runtime, getting setup to "
"build applications, and when to bundle dependencies yourself."
msgstr ""

#: ../../building-basics.rst:7
msgid "Runtimes"
msgstr ""

#: ../../building-basics.rst:9
msgid ""
"As was described in the :doc:`basic-concepts`, runtimes provide basic "
"dependencies that can be used by applications. They also provide the "
"environment that applications run in."
msgstr ""

#: ../../building-basics.rst:11
msgid ""
"Flatpak requires each application to specify a runtime, and this runtime "
"must be present on a system for it to run. Therefore, one of the first "
"decisions you need to make when building an application with Flatpak, is "
"which runtime it will use."
msgstr ""

#: ../../building-basics.rst:13
msgid ""
"An overview of the runtimes that are available can be found in the "
":doc:`available-runtimes` page. There are deliberately only a small number "
"of runtimes to choose from. Typically, runtimes are picked on the basis of "
"which dependencies an application requires. If a runtime exists that "
"provides libraries that you plan on using, this is usually the correct "
"runtime to use!"
msgstr ""

#: ../../building-basics.rst:17
msgid ""
"Runtimes require regular maintenance, and application developers should "
"generally not consider creating their own."
msgstr ""

#: ../../building-basics.rst:19
msgid ""
"Runtimes are automatically installed for users when they install an "
"application, and build tools can also automatically install them for you "
"(``flatpak-builder``'s ``--install-deps-from`` option is useful for this). "
"However, if you do need to manually install your chosen runtime, this can be"
" done in the same way as installing an application, with the ``flatpak "
"install`` command. For example, the command to install the GNOME 3.26 "
"runtime is::"
msgstr ""

#: ../../building-basics.rst:24
msgid "Software Development Kits (SDKs)"
msgstr ""

#: ../../building-basics.rst:26
msgid ""
"Each runtime is paired with an SDK (Software Develpment Kit). For example, "
"the GNOME 3.26 runtime is accompanied by the GNOME 3.26 SDK. The SDK "
"includes the same things as the regular runtime, but also includes all the "
"development resources and tools that are required to build an application, "
"such as build and packaging tools, header files, compilers and debuggers."
msgstr ""

#: ../../building-basics.rst:28
msgid ""
"Applications must be built with the SDK that corresponds to their runtime, "
"so that applications that use the GNOME 3.26 runtime must be built with the "
"GNOME 3.26 SDK."
msgstr ""

#: ../../building-basics.rst:30
msgid ""
"Like runtimes, SDKs will sometimes be automatically installed for you, but "
"if you do need to manually install them, they are installed in the same was "
"as applications and runtimes, such as::"
msgstr ""

#: ../../building-basics.rst:35
msgid "Bundling"
msgstr ""

#: ../../building-basics.rst:37
msgid ""
"One of the key advantages of Flatpak is that it allows application authors "
"to bundle whatever libraries or dependencies that they want. This means that"
" developers aren't constrained by which libraries are available through "
"Linux distributions. It also provides flexibility, allowing particular "
"versions of libraries to be used, or the use of libraries that have been "
"patched."
msgstr ""

#: ../../building-basics.rst:39
msgid ""
"While bundling is very powerful and flexible, it also places a greater "
"maintenance burden on the application developer. Therefore, while it is "
"possible to bundle as much as you would like, it is generally recommended to"
" try and keep the number of bundled modules as low as possible. If a "
"dependency is available as part of a runtime, it is generally better to use "
"the version from the runtime rather than bundle it yourself."
msgstr ""

#: ../../building-basics.rst:41
msgid ""
"The specifics of how to bundle libraries is covered in the :doc:`manifests` "
"section."
msgstr ""

#: ../../building-basics.rst:44
msgid "Base apps"
msgstr ""

#: ../../building-basics.rst:46
msgid ""
"Flatpak allows almost any module to be bundled as part of an application, "
"even other applications. Typically, this is done with special-purpose "
"applications that have been created in order to be bundled. These "
"applications, called *base apps*, contain dependencies or frameworks that "
"can be used by other applications, in order to share dependencies."
msgstr ""

#: ../../building-basics.rst:48
msgid ""
"Base apps don't get rebuilt as part of the build process, which makes "
"building faster (particularly when bundling large dependences). And because "
"each base app is only built once, it is guaranteed to be identical wherever "
"it is used, so it will only be saved once on disk."
msgstr ""

#: ../../building-basics.rst:50
msgid ""
"A number of base apps are available and, unlike runtimes, they can be built "
"and published as required."
msgstr ""
